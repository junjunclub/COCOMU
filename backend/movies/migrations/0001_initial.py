# Generated by Django 4.2.8 on 2024-05-21 02:36

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_ids', models.JSONField()),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Ott',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(max_length=30)),
                ('provider_id', models.IntegerField()),
                ('logo_path', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('release_date', models.DateField()),
                ('poster_path', models.URLField(null=True)),
                ('is_adult', models.BooleanField()),
                ('movie_id', models.IntegerField(unique=True)),
                ('overview', models.TextField()),
                ('origin_country', models.JSONField(null=True)),
                ('runtime', models.IntegerField()),
                ('director', models.JSONField()),
                ('vote_average', models.FloatField()),
                ('provide_info', models.JSONField()),
                ('genres', models.JSONField()),
                ('backdrop_path', models.URLField(null=True)),
                ('actor', models.JSONField()),
                ('related_movies', models.JSONField(blank=True, null=True)),
                ('like_user', models.ManyToManyField(related_name='like_movie', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
